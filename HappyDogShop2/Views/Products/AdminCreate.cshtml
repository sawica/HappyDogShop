@using System.Collections
@using HappyDogShop2.Models
@model HappyDogShop2.Models.Product

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div style=" border-style: double; border-radius: 8px; border-color: #f7e6cf; padding: 30px; margin: 50px;" class="sawibox form-horizontal">
        <h4>Dodaj produkt</h4>
        <hr style="height: 1px; background-color: #e43e86; color: #e43e86"/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsHidden, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsHidden)
                    @Html.ValidationMessageFor(model => model.IsHidden, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StockCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockCount, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.MediaTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MediaTypeId, ViewData["mediaList"] as List<SelectListItem>, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MediaTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.DropDownList("selectCategory", ViewData["categoriesList"] as List<SelectListItem>, new {htmlAttributes = new {@class = "form-control"}}) *@
                @Html.DropDownListFor(model => model.CategoryId, ViewData["categoriesList"] as List<SelectListItem>, new {htmlAttributes = new {@class = "form-control"}})
                @* @Html.DropDownList("selectCategory", new SelectList((IEnumerable)ViewData["categoriesList"]), "kategorie",) *@
                @* @Html.EditorFor(model => model.CategoryId, new {htmlAttributes = new {@class = "form-control"}}) *@
                @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.SaleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SaleId, ViewData["saleList"] as List<SelectListItem>, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SaleId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" style="margin-left: 215px; border-color: #e43e86"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć", "AdminIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
