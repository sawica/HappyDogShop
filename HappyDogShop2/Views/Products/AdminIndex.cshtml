@model IEnumerable<HappyDogShop2.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h4>Produkty:</h4>

<p>
    @Html.ActionLink("Utwórz nowy", "AdminCreate")
</p>

<form asp-controller="User" asp-action="Index" method="get">

    <p>
        Nazwa: <input type="text" name="Name"/>
    </p>
    
    <p>
        Przedział cenowy
    </p>

    <input style="width: 25%; outline: none; opacity: 0.7;
   height: 20px; background: #e43e86; cursor: grab; -webkit-appearance: none;
" id="minPrice" type="range" name="Price1" min=@ViewBag.min max=@ViewBag.max value=@ViewBag.min  onchange="func()"/>
    <p id="min"></p>
    <input style="width: 25%; outline: none; opacity: 0.7;
   height: 20px; background: #e43e86; cursor: grab; -webkit-appearance: none; " id="maxPrice" type="range" name="Price2" min=@ViewBag.min max=@ViewBag.max value=@ViewBag.max onchange="func()"/>
    <p id="max"></p>
    <script>
        func()        
        function func (){
            let min = document.getElementById('minPrice');
            let max = document.getElementById('maxPrice'); 
            document.getElementById('min').innerHTML = min.value
            document.getElementById('max').innerHTML = max.value
        }
    </script>
    
    <p>
        Kategoria: <input type="text" name="CategoryId"/>
    </p>
    
    <p>
        Promocje: <input type="hidden" name="Sale" value="false"><input type="checkbox" onclick="this.previousSibling.value=true">
    </p>
    
    <p>
        Na stanie: <input type="hidden" name="InStock" value="true"><input type="checkbox" checked="checked" onclick="this.previousSibling.value=false">
    </p>
    
    <p>
        <input type="submit" value="Szukaj"/>
    </p>
    
    
</form>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsHidden)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StockCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaTypeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SaleId)
        </th>

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsHidden)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StockCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MediaTypeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CategoryId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SaleId)
        </td>
        <td>
            @Html.ActionLink("Edytuj", "AdminEdit", new {id = item.ProductId}) |
            @Html.ActionLink("Szczegóły", "AdminDetails", new {id = item.ProductId}) |
            @Html.ActionLink("Usuń", "AdminDelete", new {id = item.ProductId})
        </td>
    </tr>
}

</table>
